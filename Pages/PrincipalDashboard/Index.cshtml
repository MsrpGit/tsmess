@page
@* @model IndexModel *@
@model tsmess.Pages.Principal_Dashboard.IndexModel
@{
    ViewData["Title"] = "Home page";
    Layout = "_Layout";
}
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

<script src="js/script.js"></script>
<script>
    $(document).ready(function () {
        // Re-validate the form when the modal is shown
        $('#apModal').on('shown.bs.modal', function () {
            $.validator.unobtrusive.parse('#addInventoryForm');
        });
    });

    const profileIcon = document.querySelector('img[src="img/profile_icon.png"]');
    const profileMenu = document.getElementById('profileMenu');

    profileIcon.addEventListener('click', () => {
        profileMenu.style.display = profileMenu.style.display === 'none' ? 'block' : 'none';
    });

    // Optional: close dropdown when clicking outside
    document.addEventListener('click', function (event) {
        if (!profileIcon.contains(event.target) && !profileMenu.contains(event.target)) {
            profileMenu.style.display = 'none';
        }
    });
    function toggleMessagesPopup() {
        const popup = document.getElementById("messagesPopup");
        popup.classList.toggle("d-none");
    }

    // Stop click inside popup from closing it
    document.getElementById("messagesPopup").addEventListener("click", function (event) {
        event.stopPropagation();
    });

    // Hide popup when clicking outside
    document.addEventListener("click", function (event) {
        const popup = document.getElementById("messagesPopup");
        const label = document.querySelector("label.position-relative");

        if (!popup.contains(event.target) && !label.contains(event.target)) {
            popup.classList.add("d-none");
        }
    });

    document.addEventListener("DOMContentLoaded", () => {


        const inventoryTab = document.getElementById("v-pills-messages-tab");
        const vendorTab = document.getElementById("v-pills-vm-tab");
        const dietTab = document.getElementById("v-pills-home-tab");

        const fetchAndInject = async (url, targetId, callback) => {
            try {
                const res = await fetch(url);
                const html = await res.text();
                document.getElementById(targetId).innerHTML = html;
                if (typeof callback === "function") callback();
            } catch (err) {
                console.error("Failed to load content:", err);
            }
        };

        const attachIsAcceptedHandler = (formId, hiddenInputId) => {
            const form = document.getElementById(formId);
            const hiddenInput = document.getElementById(hiddenInputId);
            if (!form || !hiddenInput) return;
            form.addEventListener("submit", (e) => {
                const clicked = document.activeElement;
                if (clicked?.hasAttribute("data-isaccepted")) {
                    hiddenInput.value = clicked.getAttribute("data-isaccepted");
                }
            });
        };

        const setupItemHandlers = (modal, listId, hiddenInputId, quantityClass, endpointPrefix) => {
            const itemList = modal.querySelector(`datalist#${listId}`);
            const itemSearch = modal.querySelector(`input[list='${listId}']`);
            const hiddenInput = modal.querySelector(`input#${hiddenInputId}`);
            const quantityInputs = modal.querySelectorAll(`input.${quantityClass}`);
            const itemType = modal.querySelector("input#ItemType")?.value;

            if (!itemType) return;

            fetch(`${endpointPrefix}?handler=GetItems&itemType=${encodeURIComponent(itemType)}`)
                .then(res => res.json())
                .then(items => {
                    itemList.innerHTML = items.map(i =>
                        `<option value="${i.itemName}" data-id="${i.itemId}"></option>`
                    ).join("");

                    itemSearch.addEventListener("change", () => {
                        const selected = [...itemList.options].find(opt => opt.value === itemSearch.value);
                        if (selected) {
                            const itemId = selected.getAttribute("data-id");
                            hiddenInput.value = itemId;
                            fetch(`${endpointPrefix}?handler=ItemStock&itemId=${encodeURIComponent(itemId)}`)
                                .then(res => res.json())
                                .then(data => {
                                    quantityInputs.forEach(input => input.value = data.quantity || "0");
                                });
                        }
                    });
                })
                .catch(err => console.error("Item loading failed", err));
        };

        const setupModalTriggers = (selector, listId, hiddenInputId, quantityClass, endpointPrefix) => {
            document.querySelectorAll(selector).forEach(button => {
                button.addEventListener("click", () => {
                    const modal = document.querySelector(button.getAttribute("data-bs-target"));
                    modal.querySelector("input#ItemType").value = button.getAttribute("data-itemType");
                    setupItemHandlers(modal, listId, hiddenInputId, quantityClass, endpointPrefix);
                });
            });
        };

        const onInventoryTabShown = () => {
            fetchAndInject('/PrincipalDashboard/InventoryManagement', 'inventoryContent', () => {
                setupModalTriggers(".add-item-btn", "itemList", "hiddenItemId", "quantityPresent", "/PrincipalDashboard/InventoryManagement");
                setupModalTriggers(".delete-item-btn", "itemDeleteList", "hiddenItemId", "quantityPresent", "/PrincipalDashboard/InventoryManagement");

                attachIsAcceptedHandler("addInventoryFOSForm", "IsAcceptedFOS");
                attachIsAcceptedHandler("addInventoryForm", "IsAcceptedAP");
                setupDynamicItemDropdown();
            });
        };

        const setupDynamicItemDropdown = () => {
            const dropdown = document.getElementById("itemTypeDropdown");
            const itemList = document.querySelector("datalist#itemList");
            const itemSearch = document.querySelector("input[list='itemList']");
            const hiddenInput = document.querySelector("input#hiddenItemId");
            const quantityInputs = document.querySelectorAll("input.quantityPresent");

            if (!dropdown) return;

            dropdown.addEventListener("change", () => {
                const itemType = dropdown.value;
                itemList.innerHTML = "";
                itemSearch.value = "";
                hiddenInput.value = "";
                quantityInputs.forEach(input => input.value = "");

                fetch(`/PrincipalDashboard/InventoryManagement?handler=GetItems&itemType=${encodeURIComponent(itemType)}`)
                    .then(res => res.json())
                    .then(items => {
                        itemList.innerHTML = items.map(i =>
                            `<option value="${i.itemName}" data-id="${i.itemId}"></option>`
                        ).join("");
                    });
            });

            itemSearch.addEventListener("change", () => {
                const selected = [...itemList.options].find(opt => opt.value === itemSearch.value);
                if (selected) {
                    const itemId = selected.getAttribute("data-id");
                    hiddenInput.value = itemId;
                    fetch(`/PrincipalDashboard/InventoryManagement?handler=ItemStock&itemId=${encodeURIComponent(itemId)}`)
                        .then(res => res.json())
                        .then(data => {
                            quantityInputs.forEach(input => input.value = data.quantity || "0");
                        });
                }
            });
        };

        const onVendorTabShown = () => {
            fetchAndInject('/PrincipalDashboard/VendorManagement', 'vendorContent', () => {
                setupModalTriggers(".add-item-btn", "itemList", "hiddenItemId", "quantityPresent", "/PrincipalDashboard/InventoryManagement");
            });

            const vendorModal = document.getElementById("addvendor");

            if (vendorModal) {
                vendorModal.addEventListener("shown.bs.modal", () => {
                    var btnsendOPT = vendorModal.querySelector('button#sendOTP');

                    if (btnsendOPT) {
                        btnsendOPT.removeEventListener("click", sendOTP()); // avoid duplicates
                        btnsendOPT.addEventListener("click", sendOTP());
                        console.log("✅ sendOTP bound after modal shown.");
                    } else {
                        console.warn("❌ sendOTP button not found in modal.");
                    }
                });
            } else {
                console.error("❌ Modal element #addvendor not found in DOM.");
            }
        };

        // Tab listeners
        inventoryTab?.addEventListener("shown.bs.tab", onInventoryTabShown);
        vendorTab?.addEventListener("shown.bs.tab", onVendorTabShown);

        dietTab?.addEventListener("shown.bs.tab", () => {
            fetchAndInject('/PrincipalDashboard/Diet', 'dietContent');
        });

        // Load Diet content immediately when page loads
        fetchAndInject('/PrincipalDashboard/Diet', 'dietContent');

        // Restore tab if preselected
        const selectedTab = document.getElementById("selectedTab")?.value;
        if (selectedTab) {
            const triggerEl = document.querySelector(`button[data-bs-target="#${selectedTab}"]`);
            if (triggerEl) new bootstrap.Tab(triggerEl).show();
        }

        // Save tab state on click
        document.querySelectorAll('.nav-link').forEach(tab => {
            tab.addEventListener('click', () => {
                document.getElementById("ActiveTab").value = tab.getAttribute("data-bs-target").substring(1);
            });
        });
    });

    function sendOTP() {
        debugger;
        console.log('test');
        var mobileNo = document.getElementById("contact").value.trim();
        if (!mobileNo) {
            alert("Please enter the vendor contact number first.");
            return;
        }
        $.ajax({
            //url: '/PrincipalDashboard?handler=sendSMSAsync',
            //url: '/PrincipalDashboard/VendorManagement?handler=SendSMSAsync',
            url: '/api/send-sms',
            type: 'POST',
            contentType: 'application/json',
            data: JSON.stringify({ toMobileNo: mobileNo }),
            success: function (data) {
                if (data.success) {
                    sessionStorage.setItem("vendor_otp", data.otp);
                    alert("OTP sent: " + data.otp); // For testing only
                } else {
                    alert("Failed to send OTP.");
                }
            },
            error: function () {
                alert("Error sending OTP.");
            }
        });
        // fetch(`/PrincipalDashboard/VendorManagement?handler=sendSMS&toMobileNo=${encodeURIComponent(mobileNo)}`)
        //     .then(response => response.json())
        //     .then(data => {
        //         if (data.success) {
        //             sessionStorage.setItem("vendor_otp", data.otp);
        //             alert("OTP sent: " + data.otp); // REMOVE in production!
        //         } else {
        //             alert("Failed to send OTP.");
        //         }
        //     })
        //     .catch(error => {
        //         console.error("Error:", error);
        //         alert("Error sending OTP.");
        //     });
    }
    window.sendOTP = sendOTP; // Expose to global scope if needed

    // document.addEventListener("DOMContentLoaded", function () {
    //     const inventoryTab = document.getElementById("v-pills-messages-tab");

    //     const vendorTab = document.getElementById("v-pills-vm-tab");

    //     if (inventoryTab) {
    //         inventoryTab.addEventListener("shown.bs.tab", function () {
    //             fetch('/PrincipalDashboard/InventoryManagement')
    //                 .then(response => response.text())
    //                 .then(html => {
    //                     document.getElementById("inventoryContent").innerHTML = html;

    //                     // Setup event handlers after loading HTML
    //                     setupModalHandlers();
    //                     loadItemsOnItemTypeChange();
    //                     setupDleteModalHandlers();

    //                     function attachIsAcceptedHandler(formId, hiddenInputId) {
    //                         const form = document.getElementById(formId);
    //                         const hiddenInput = document.getElementById(hiddenInputId);

    //                         if (!form || !hiddenInput) return;

    //                         form.addEventListener("submit", function (e) {
    //                             const clickedButton = document.activeElement;
    //                             if (clickedButton && clickedButton.hasAttribute("data-isaccepted")) {
    //                                 hiddenInput.value = clickedButton.getAttribute("data-isaccepted");
    //                             }
    //                         });
    //                     }

    //                     // Attach for both forms
    //                     attachIsAcceptedHandler("addInventoryFOSForm", "IsAcceptedFOS");
    //                     attachIsAcceptedHandler("addInventoryForm", "IsAcceptedAP");
    //                 });
    //         });
    //     }
    //     if (vendorTab) {
    //         vendorTab.addEventListener("shown.bs.tab", function () {
    //             fetch('/PrincipalDashboard/VendorManagement')
    //                 .then(response => response.text())
    //                 .then(html => {
    //                     document.getElementById("vendorContent").innerHTML = html;
    //                     setupVendorModalHandlers();

    //                 });
    //         });
    //     }

    //     function setupDleteModalHandlers() {
    //         document.querySelectorAll(".delete-item-btn").forEach(button => {
    //             button.addEventListener("click", function () {
    //                 const itemType = this.getAttribute("data-itemType");
    //                 const modal = document.querySelector(this.getAttribute("data-bs-target"));
    //                 const itemList = modal.querySelector("datalist#itemDeleteList");
    //                 const hiddenItemIdInput = modal.querySelector("input#hiddenItemId");
    //                 const quantityInputs = modal.querySelectorAll("input.quantityPresent");
    //                 const hiddenItemType = modal.querySelector("input#ItemType");
    //                 hiddenItemType.value = itemType; // Set the item type in the hidden input

    //                 // Fetch and populate items for selected itemType
    //                 fetch(`/PrincipalDashboard/InventoryManagement?handler=GetItems&itemType=${encodeURIComponent(itemType)}`)
    //                     .then(res => res.json())
    //                     .then(items => {
    //                         itemList.innerHTML = "";
    //                         items.forEach(item => {
    //                             const option = document.createElement("option");
    //                             option.value = item.itemName;
    //                             option.setAttribute("data-id", item.itemId);
    //                             itemList.appendChild(option);
    //                         });

    //                         // Handle item selection
    //                         const itemSearch = modal.querySelector("input[list='itemDeleteList']");
    //                         itemSearch.addEventListener("change", function () {
    //                             const inputValue = this.value;
    //                             const matchedOption = [...itemList.options].find(opt => opt.value === inputValue);

    //                             if (matchedOption) {
    //                                 const itemId = matchedOption.getAttribute("data-id");
    //                                 hiddenItemIdInput.value = itemId;

    //                                 // Fetch stock for selected item
    //                                 fetch(`/PrincipalDashboard/InventoryManagement?handler=ItemStock&itemId=${encodeURIComponent(itemId)}`)
    //                                     .then(res => res.json())
    //                                     .then(data => {
    //                                         quantityInputs.forEach(input => {
    //                                             input.value = data.quantity || "0";
    //                                         });
    //                                     })
    //                                     .catch(err => {
    //                                         console.error("Error fetching stock", err);
    //                                         quantityInputs.forEach(input => input.value = "0");
    //                                     });
    //                             }
    //                         });
    //                     })
    //                     .catch(err => console.error("Error fetching items:", err));
    //             });
    //         });
    //     }

    //     function setupModalHandlers() {
    //         document.querySelectorAll(".add-item-btn").forEach(button => {
    //             button.addEventListener("click", function () {
    //                 const itemType = this.getAttribute("data-itemType");
    //                 const modal = document.querySelector(this.getAttribute("data-bs-target"));
    //                 const itemList = modal.querySelector("datalist#itemList");
    //                 const hiddenItemIdInput = modal.querySelector("input#hiddenItemId");
    //                 const quantityInputs = modal.querySelectorAll("input.quantityPresent");
    //                 const hiddenItemType = modal.querySelector("input#ItemType");
    //                 hiddenItemType.value = itemType; // Set the item type in the hidden input

    //                 // Fetch and populate items for selected itemType
    //                 fetch(`/PrincipalDashboard/InventoryManagement?handler=GetItems&itemType=${encodeURIComponent(itemType)}`)
    //                     .then(res => res.json())
    //                     .then(items => {
    //                         itemList.innerHTML = "";
    //                         items.forEach(item => {
    //                             const option = document.createElement("option");
    //                             option.value = item.itemName;
    //                             option.setAttribute("data-id", item.itemId);
    //                             itemList.appendChild(option);
    //                         });

    //                         // Handle item selection
    //                         const itemSearch = modal.querySelector("input[list='itemList']");
    //                         itemSearch.addEventListener("change", function () {
    //                             const inputValue = this.value;
    //                             const matchedOption = [...itemList.options].find(opt => opt.value === inputValue);

    //                             if (matchedOption) {
    //                                 const itemId = matchedOption.getAttribute("data-id");
    //                                 hiddenItemIdInput.value = itemId;

    //                                 // Fetch stock for selected item
    //                                 fetch(`/PrincipalDashboard/InventoryManagement?handler=ItemStock&itemId=${encodeURIComponent(itemId)}`)
    //                                     .then(res => res.json())
    //                                     .then(data => {
    //                                         quantityInputs.forEach(input => {
    //                                             input.value = data.quantity || "0";
    //                                         });
    //                                     })
    //                                     .catch(err => {
    //                                         console.error("Error fetching stock", err);
    //                                         quantityInputs.forEach(input => input.value = "0");
    //                                     });
    //                             }
    //                         });
    //                     })
    //                     .catch(err => console.error("Error fetching items:", err));
    //             });
    //         });
    //     }

    //     function loadItemsOnItemTypeChange() {
    //         const itemTypeDropdown = document.getElementById("itemTypeDropdown");
    //         const itemList = document.querySelector("datalist#itemList");
    //         const itemSearch = document.querySelector("input[list='itemList']");
    //         const hiddenItemIdInput = document.querySelector("input#hiddenItemId");
    //         const quantityInputs = document.querySelectorAll("input.quantityPresent");

    //         if (!itemTypeDropdown) return;

    //         itemTypeDropdown.addEventListener("change", function () {
    //             const itemType = this.value;

    //             // Clear previous values
    //             itemList.innerHTML = "";
    //             itemSearch.value = "";
    //             hiddenItemIdInput.value = "";
    //             quantityInputs.forEach(input => input.value = "");

    //             fetch(`/PrincipalDashboard/InventoryManagement?handler=GetItems&itemType=${encodeURIComponent(itemType)}`)
    //                 .then(res => res.json())
    //                 .then(items => {
    //                     items.forEach(item => {
    //                         const option = document.createElement("option");
    //                         option.value = item.itemName;
    //                         option.setAttribute("data-id", item.itemId);
    //                         itemList.appendChild(option);
    //                     });
    //                 })
    //                 .catch(err => {
    //                     console.error("Error fetching items:", err);
    //                 });
    //         });

    //         // Item selection logic
    //         itemSearch.addEventListener("change", function () {
    //             const inputValue = this.value;
    //             const matchedOption = [...itemList.options].find(opt => opt.value === inputValue);

    //             if (matchedOption) {
    //                 const itemId = matchedOption.getAttribute("data-id");
    //                 hiddenItemIdInput.value = itemId;

    //                 fetch(`/PrincipalDashboard/InventoryManagement?handler=ItemStock&itemId=${encodeURIComponent(itemId)}`)
    //                     .then(res => res.json())
    //                     .then(data => {
    //                         quantityInputs.forEach(input => {
    //                             input.value = data.quantity || "0";
    //                         });
    //                     })
    //                     .catch(err => {
    //                         console.error("Error fetching stock", err);
    //                         quantityInputs.forEach(input => input.value = "0");
    //                     });
    //             }
    //         });
    //     }

    //     function setupVendorModalHandlers() {
    //         document.querySelectorAll(".add-item-btn").forEach(button => {
    //             button.addEventListener("click", function () {
    //                 const itemType = this.getAttribute("data-itemType");
    //                 const modal = document.querySelector(this.getAttribute("data-bs-target"));
    //                 const itemList = modal.querySelector("datalist#itemList");
    //                 const hiddenItemIdInput = modal.querySelector("input#hiddenItemId");
    //                 const quantityInputs = modal.querySelectorAll("input.quantityPresent");
    //                 const hiddenItemType = modal.querySelector("input#ItemType");
    //                 hiddenItemType.value = itemType; // Set the item type in the hidden input

    //                 // Fetch and populate items for selected itemType
    //                 fetch(`/PrincipalDashboard/InventoryManagement?handler=GetItems&itemType=${encodeURIComponent(itemType)}`)
    //                     .then(res => res.json())
    //                     .then(items => {
    //                         itemList.innerHTML = "";
    //                         items.forEach(item => {
    //                             const option = document.createElement("option");
    //                             option.value = item.itemName;
    //                             option.setAttribute("data-id", item.itemId);
    //                             itemList.appendChild(option);
    //                         });

    //                         // Handle item selection
    //                         const itemSearch = modal.querySelector("input[list='itemList']");
    //                         itemSearch.addEventListener("change", function () {
    //                             const inputValue = this.value;
    //                             const matchedOption = [...itemList.options].find(opt => opt.value === inputValue);

    //                             if (matchedOption) {
    //                                 const itemId = matchedOption.getAttribute("data-id");
    //                                 hiddenItemIdInput.value = itemId;

    //                                 // Fetch stock for selected item
    //                                 fetch(`/PrincipalDashboard/InventoryManagement?handler=ItemStock&itemId=${encodeURIComponent(itemId)}`)
    //                                     .then(res => res.json())
    //                                     .then(data => {
    //                                         quantityInputs.forEach(input => {
    //                                             input.value = data.quantity || "0";
    //                                         });
    //                                     })
    //                                     .catch(err => {
    //                                         console.error("Error fetching stock", err);
    //                                         quantityInputs.forEach(input => input.value = "0");
    //                                     });
    //                             }
    //                         });
    //                     })
    //                     .catch(err => console.error("Error fetching items:", err));
    //             });
    //         });
    //     }


    //     // Restore tab state if needed
    //     const selectedTab = document.getElementById("selectedTab")?.value;
    //     if (selectedTab) {
    //         const triggerEl = document.querySelector(`button[data-bs-target="#${selectedTab}"]`);
    //         if (triggerEl) new bootstrap.Tab(triggerEl).show();
    //     }

    //     // Save active tab on click
    //     document.querySelectorAll('.nav-link').forEach(tab => {
    //         tab.addEventListener('click', function () {
    //             document.getElementById("ActiveTab").value = this.getAttribute("data-bs-target").substring(1);
    //         });
    //     });
    // });

</script>
<div class="bg-white mt-2 py-2">
    <h4 class="text-center">Diet</h4>
</div>
<div class="tab_design mt-3">
    <div class="d-flex align-items-start custom-tab-wrapper">
        <div class="nav flex-column nav-pills custom-nav" id="v-pills-tab" role="tablist" aria-orientation="vertical">
            <button class="nav-link active text-start" id="v-pills-home-tab" data-bs-toggle="pill" data-bs-target="#v-pills-home" type="button" role="tab" aria-controls="v-pills-home" aria-selected="true">Diet</button>
            <button class="nav-link text-start" id="v-pills-profile-tab" data-bs-toggle="pill" data-bs-target="#v-pills-profile" type="button" role="tab" aria-controls="v-pills-profile" aria-selected="false">Storage</button>
            <button class="nav-link text-start" id="v-pills-messages-tab" data-bs-toggle="pill" data-bs-target="#v-pills-messages" type="button" role="tab" aria-controls="v-pills-messages" aria-selected="false">Inventory Management</button>
            <button class="nav-link text-start" id="v-pills-settings-tab" data-bs-toggle="pill" data-bs-target="#v-pills-settings" type="button" role="tab" aria-controls="v-pills-settings" aria-selected="false">Indent</button>
            <button class="nav-link text-start" id="v-pills-ticket-tab" data-bs-toggle="pill" data-bs-target="#v-pills-ticket" type="button" role="tab text-start" aria-controls="v-pills-ticket" aria-selected="false">Ticket</button>
            <button class="nav-link text-start" id="v-pills-vm-tab" data-bs-toggle="pill" data-bs-target="#v-pills-vm" type="button" role="tab" aria-controls="v-pills-vm" aria-selected="false">Vendor Management</button>
        </div>
        <div class="tab-content custom-tab-content p-3 m-0 w-100" id="v-pills-tabContent">

            <div class="tab-pane fade show active" id="v-pills-home" role="tabpanel" aria-labelledby="v-pills-home-tab">
                <div class="row">
                    <div id="dietContent">
                        <p>Loading...</p>
                    </div>
                </div>
            </div>
            <div class="tab-pane fade" id="v-pills-profile" role="tabpanel" aria-labelledby="v-pills-profile-tab">
                <div class="row">
                    <div class="col-12">
                        <ul class="nav nav-tabs">
                            <li class="nav-item">
                                <a class="nav-link active" data-bs-toggle="tab" href="#provision">Dry Provision</a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link" data-bs-toggle="tab" href="#perishablee">Perishables</a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link" data-bs-toggle="tab" href="#rice">Rice</a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link" data-bs-toggle="tab" href="#cleaning">Cleaning Agents</a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link" data-bs-toggle="tab" href="#utensils">Equipment / Utensils</a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link" data-bs-toggle="tab" href="#fos">From Other School</a>
                            </li>
                        </ul>
                        <div class="tab-content">
                            <div id="provision" class="tab-pane fade show active">
                                <div class="date-filters justify-content-end align-items-center">
                                    <h6 class="mb-0 fw-bold">Consumption Sheet :</h6>
                                    <label for="fromDate" class="text-end">From</label>
                                    <input type="date" id="fromDate" class="form-control" style="width: 200px;">
                                    <label for="toDate">To</label>
                                    <input type="date" id="toDate" class="form-control" style="width: 200px;">
                                    <button class="btn btn-outline-secondary"><img src="img/print_icon.png"></button>
                                    <button class="btn btn-outline-secondary"><img src="img/download_icon.png"></button>
                                </div>
                                <div class="table-responsive">
                                    <table class="table table-bordered text-center">
                                        <thead class="gradient-header">
                                            <tr>
                                                <th>S.No</th>
                                                <th>Pulses</th>
                                                <th>Beginning of Month</th>
                                                <th>Present</th>
                                                <th>Action</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            <tr>
                                                <td>01</td>
                                                <td>Groundnut</td>
                                                <td><input type="text" class="form-control"></td>
                                                <td><input type="text" class="form-control"></td>
                                                <td><img src="img/edit_icon.jpg"></i></td>
                                            </tr>
                                            <tr>
                                                <td>02</td>
                                                <td>Kandi Pappu</td>
                                                <td><input type="text" class="form-control"></td>
                                                <td><input type="text" class="form-control"></td>
                                                <td><img src="img/edit_icon.jpg"></i></td>
                                            </tr>
                                            <tr class="gradient-header">
                                                <th>S.No</th>
                                                <th>Condiments / Spices / Beverages</th>
                                                <th>Beginning of Month</th>
                                                <th>Present</th>
                                                <th>Action</th>
                                            </tr>
                                            <tr>
                                                <td>03</td>
                                                <td>Garam Masala</td>
                                                <td><input type="text" class="form-control"></td>
                                                <td><input type="text" class="form-control"></td>
                                                <td><img src="img/edit_icon.jpg"></i></td>
                                            </tr>
                                            <tr>
                                                <td>04</td>
                                                <td>Sambar Powder</td>
                                                <td><input type="text" class="form-control"></td>
                                                <td><input type="text" class="form-control"></td>
                                                <td><img src="img/edit_icon.jpg"></i></td>
                                            </tr>
                                            <tr>
                                                <th>S.No</th>
                                                <th>Oil / Ghee</th>
                                                <th>Beginning of Month</th>
                                                <th>Present</th>
                                                <th>Action</th>
                                            </tr>
                                            <tr>
                                                <td>05</td>
                                                <td>Vijaya Oil</td>
                                                <td><input type="text" class="form-control"></td>
                                                <td><input type="text" class="form-control"></td>
                                                <td><img src="img/edit_icon.jpg"></i></td>
                                            </tr>
                                            <tr>
                                                <td>06</td>
                                                <td>Ghee</td>
                                                <td><input type="text" class="form-control"></td>
                                                <td></td>
                                                <input type="text" class="form-control">
                                                <td><img src="img/edit_icon.jpg"></i></td>
                                            </tr>
                                        </tbody>
                                    </table>
                                </div>
                            </div>
                            <div id="perishablee" class="tab-pane fade">
                                <div class="date-filters justify-content-end">
                                    <label for="fromDate">From</label>
                                    <input type="date" id="fromDate" class="form-control" style="width: 200px;">
                                    <label for="toDate">To</label>
                                    <input type="date" id="toDate" class="form-control" style="width: 200px;">
                                    <button class="btn btn-outline-secondary"><img src="img/print_icon.png"></button>
                                    <button class="btn btn-outline-secondary"><img src="img/download_icon.png"></button>
                                </div>
                                <table class="table table-bordered text-center align-middle">
                                    <thead>
                                        <tr>
                                            <th>S.No</th>
                                            <th>Vegetables</th>
                                            <th>Balance Qty</th>
                                            <th>Recently Added</th>
                                            <th>Received Date</th>
                                            <th>Present Availability</th>
                                            <th></th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        <tr>
                                            <td>01</td>
                                            <td>Onion</td>
                                            <td><input type="text" class="form-control" value="40"></td>
                                            <td><input type="text" class="form-control" value="80"></td>
                                            <td><input type="date" class="form-control"></td>
                                            <td><input type="text" class="form-control" value="120"></td>
                                            <td><img src="img/edit_icon.jpg"></i></td>
                                        </tr>
                                        <tr>
                                            <td>02</td>
                                            <td>Cabbage</td>
                                            <td><input type="text" class="form-control" value="10"></td>
                                            <td><input type="text" class="form-control" value="250"></td>
                                            <td><input type="date" class="form-control"></td>
                                            <td><input type="text" class="form-control" value="260"></td>
                                            <td><img src="img/edit_icon.jpg"></i></td>
                                        </tr>
                                        <tr>
                                            <th>S.No</th>
                                            <th>Fruits</th>
                                            <th>Balance Qty</th>
                                            <th>Recently Added</th>
                                            <th>Received Date</th>
                                            <th>Present Availability</th>
                                            <th></th>
                                        </tr>
                                        <tr>
                                            <td>01</td>
                                            <td>Banana</td>
                                            <td><input type="text" class="form-control" value="100"></td>
                                            <td><input type="text" class="form-control" value="500"></td>
                                            <td><input type="date" class="form-control"></td>
                                            <td><input type="text" class="form-control" value="600"></td>
                                            <td><img src="img/edit_icon.jpg"></i></td>
                                        </tr>
                                        <tr>
                                            <th>S.No</th>
                                            <th>Milk</th>
                                            <th>Balance Qty</th>
                                            <th>Recently Added</th>
                                            <th>Received Date</th>
                                            <th>Present Availability</th>
                                            <th>Action</th>
                                        </tr>
                                        <tr>
                                            <td>05</td>
                                            <td>Eggs</td>
                                            <td><input type="text" class="form-control" value="20"></td>
                                            <td><input type="text" class="form-control" value="100"></td>
                                            <td><input type="date" class="form-control"></td>
                                            <td><input type="text" class="form-control" value="120"></td>
                                            <td><img src="img/edit_icon.jpg"></i></td>
                                        </tr>
                                        <tr>
                                            <td>06</td>
                                            <td>Chicken</td>
                                            <td><input type="text" class="form-control" value="20"></td>
                                            <td><input type="text" class="form-control" value="30"></td>
                                            <td><input type="date" class="form-control" value="40"></td>
                                            <td><input type="text" class="form-control" value="50"></td>
                                            <td><img src="img/edit_icon.jpg"></i></td>
                                        </tr>
                                        <tr>
                                            <td>07</td>
                                            <td>Mutton</td>
                                            <td><input type="text" class="form-control" value="30"></td>
                                            <td><input type="text" class="form-control" value="30"></td>
                                            <td><input type="date" class="form-control"></td>
                                            <td><input type="text" class="form-control" value="70"></td>
                                            <td><img src="img/edit_icon.jpg"></i></td>
                                        </tr>
                                    </tbody>
                                </table>
                            </div>
                            <div id="rice" class="tab-pane fade">
                                <div class="date-filters justify-content-end">
                                    <label for="fromDate">From</label>
                                    <input type="date" id="fromDate" class="form-control" style="width: 200px;">
                                    <label for="toDate">To</label>
                                    <input type="date" id="toDate" class="form-control" style="width: 200px;">
                                    <button class="btn btn-outline-secondary"><img src="img/print_icon.png"></button>
                                    <button class="btn btn-outline-secondary"><img src="img/download_icon.png"></button>
                                </div>
                                <table class="table table-bordered text-center align-middle">
                                    <thead>
                                        <tr>
                                            <th>S.No</th>
                                            <th>Last Pickup Date</th>
                                            <th>Last Pickup Qty</th>
                                            <th>Present Pickup Date</th>
                                            <th>Present Pickup Qty</th>
                                            <th>Consumption Qty of the Day</th>
                                            <th>Total Availability Qty</th>
                                            <th>Action</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        <tr>
                                            <td>01</td>
                                            <td><input type="date" class="form-control"></td>
                                            <td><input type="text" class="form-control" value="150"></td>
                                            <td><input type="date" class="form-control"></td>
                                            <td><input type="text" class="form-control" value="150"></td>
                                            <td><input type="text" class="form-control" value="60"></td>
                                            <td><input type="text" class="form-control" value="240"></td>
                                            <td><img src="img/edit_icon.jpg"></i></td>
                                        </tr>
                                    </tbody>
                                </table>
                            </div>
                            <div id="cleaning" class="tab-pane fade">
                            </div>
                            <div id="utensils" class="tab-pane fade">
                            </div>
                            <div id="fos" class="tab-pane fade">
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="tab-pane fade" id="v-pills-messages" role="tabpanel" aria-labelledby="v-pills-messages-tab">
                <h6 class="section-title">Inventory Management</h6>
                <div id="inventoryContent">
                    <p>Loading...</p>
                </div>
            </div>
            <div class="tab-pane fade" id="v-pills-settings" role="tabpanel" aria-labelledby="v-pills-settings-tab">
                <div class="row">
                    <div class="col-12">
                        <ul class="nav nav-tabs">
                            <li class="nav-item">
                                <a class="nav-link active" data-bs-toggle="tab" href="#provision1">Dry Provision</a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link" data-bs-toggle="tab" href="#perishablee1">Perishablee</a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link" data-bs-toggle="tab" href="#rice1">Rice</a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link" data-bs-toggle="tab" href="#cleaning1">Cleaning Agents</a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link" data-bs-toggle="tab" href="#utensils1">Equipment / Utensils</a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link" data-bs-toggle="tab" href="#fos1">From Other School</a>
                            </li>
                        </ul>
                        <div class="tab-content">
                            <div id="provision1" class="tab-pane fade show active">
                                <div class="date-filters justify-content-end">
                                    <button class="btn btn-outline-secondary"><img src="img/print_icon.png"></button>
                                    <button class="btn btn-outline-secondary"><img src="img/download_icon.png"></button>
                                </div>
                                <div class="table-responsive">
                                    <table class="table table-bordered text-center">
                                        <thead class="gradient-header">
                                            <tr>
                                                <th>S.No</th>
                                                <th>Item</th>
                                                <th>Present Qty</th>
                                                <th>Suggestion (for 640 Students)</th>
                                                <th>Qty. Indented</th>
                                                <th>Reasons for more or Less than Suggestions</th>
                                                <th>Action</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            <tr>
                                                <td>01</td>
                                                <td>Pulses</td>
                                                <td>50 Kg</td>
                                                <td><input type="text" class="form-control" value="500 Kg"></td>
                                                <td><input type="text" class="form-control" value="50 Kg"></td>
                                                <td><input type="text" class="form-control" value="Dolor sit consectetur adip"></td>
                                                <td><button class="submit-button">Submit</button></td>
                                            </tr>
                                            <tr>
                                                <td>02</td>
                                                <td>Vegetables</td>
                                                <td>20 Kg</td>
                                                <td><input type="text" class="form-control" value="300 Kg"></td>
                                                <td><input type="text" class="form-control" value="20 Kg"></td>
                                                <td><input type="text" class="form-control" value="Consectetur adipiscing"></td>
                                                <td><button class="submit-button">Submit</button></td>
                                            </tr>
                                            <tr>
                                                <td>03</td>
                                                <td>Spices</td>
                                                <td>25 Kg</td>
                                                <td><input type="text" class="form-control" value="200 Kg"></td>
                                                <td><input type="text" class="form-control" value="25 Kg"></td>
                                                <td><input type="text" class="form-control" value="Consectetur adipiscing"></td>
                                                <td><button class="submit-button">Submit</button></td>
                                            </tr>
                                            <tr>
                                                <td>04</td>
                                                <td>Beverages</td>
                                                <td>200 Kg</td>
                                                <td><input type="text" class="form-control" value="500 Kg"></td>
                                                <td><input type="text" class="form-control" value="200 Kg"></td>
                                                <td><input type="text" class="form-control" value="Adipiscing dolor sit consect"></td>
                                                <td><button class="submit-button">Submit</button></td>
                                            </tr>
                                            <tr>
                                                <td>05</td>
                                                <td>Dal</td>
                                                <td>80 Kg</td>
                                                <td><input type="text" class="form-control" value="600 Kg"></td>
                                                <td><input type="text" class="form-control" value="80 Kg"></td>
                                                <td><input type="text" class="form-control" value="Dipiscing drywry4"></td>
                                                <td><button class="submit-button">Submit</button></td>
                                            </tr>
                                            <tr>
                                                <td>06</td>
                                                <td>Spices</td>
                                                <td>60 Kg</td>
                                                <td><input type="text" class="form-control" value="200 Kg"></td>
                                                <td><input type="text" class="form-control" value="60 Kg"></td>
                                                <td><input type="text" class="form-control" value="Consectetur adipiscing"></td>
                                                <td><button class="submit-button">Submit</button></td>
                                            </tr>
                                        </tbody>
                                    </table>
                                </div>
                            </div>
                            <div id="perishablee1" class="tab-pane fade">
                            </div>
                            <div id="rice1" class="tab-pane fade">
                            </div>
                            <div id="cleaning1" class="tab-pane fade">
                            </div>
                            <div id="utensils1" class="tab-pane fade">
                            </div>
                            <div id="fos1" class="tab-pane fade">
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="tab-pane fade" id="v-pills-ticket" role="tabpanel" aria-labelledby="v-pills-ticket-tab">
                <div class="row g-3 mb-3">
                    <div class="col-sm-12 text-end">
                        <button class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#exampleModal">New Ticket</button>
                    </div>
                    <div class="col-sm-12">
                        <div class="white-box shadow-sm">
                            <div class="table-header">
                                <h5><span class="pink fw-bold">Tickets Raised</span></h5>
                                <div class="table-tools">
                                    <input type="text" class="form-control" placeholder="Search..." />
                                    <select class="form-select">
                                        <option>Pending</option>
                                        <option>Completed</option>
                                    </select>
                                    <img src="img/print_icon.png">
                                    <img src="img/download_icon.png" class="download_img">
                                </div>
                            </div>
                            <div class="table-responsive">
                                <table class="table table-bordered mt-2" id="tsmess-table">
                                    <thead id="attendance-table">
                                        <tr>
                                            <th>Ticket ID</th>
                                            <th>Date</th>
                                            <th>Changed Menu</th>
                                            <th>Reason</th>
                                            <th>Details</th>
                                            <th>Document</th>
                                            <th>Status</th>
                                        </tr>
                                    </thead>
                                    <tbody class="table-body">
                                        <tr>
                                            <td>TGS3</td>
                                            <td>04-05-2025</td>
                                            <td>Breakfast</td>
                                            <td>Outbreak of Disease</td>
                                            <td>dummy details</td>
                                            <td><a href="#" class="text-primary">View</a></td>
                                            <td><span class="badge text-bg-danger">Pending</span></td>
                                        </tr>
                                        <tr>
                                            <td>TGS2</td>
                                            <td>05-05-2025</td>
                                            <td>Dinner</td>
                                            <td>Non-Availability of Cook</td>
                                            <td>dummy details</td>
                                            <td><a href="#" class="text-primary">View</a></td>
                                            <td><span class="badge text-bg-danger">Pending</span></td>
                                        </tr>
                                        <tr>
                                            <td>TGS1</td>
                                            <td>01-05-2025</td>
                                            <td>Snacks</td>
                                            <td>Lack of Provision Supply</td>
                                            <td>dummy details</td>
                                            <td><a href="#" class="text-primary">View</a></td>
                                            <td><span class="badge text-bg-success">Approved</span></td>
                                        </tr>
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal fade" id="exampleModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
                    <div class="modal-dialog modal-xl">
                        <div class="modal-content">
                            <div class="modal-header">
                                <h1 class="modal-title fs-5" id="exampleModalLabel">New Ticket</h1>
                                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                            </div>
                            <div class="modal-body">
                                <div class="row g-3 mb-3">
                                    <div class="col-sm-6">
                                        <label class="form-label">Reason for Change</label>
                                        <select class="form-select">
                                            <option>Outbreak of Disease</option>
                                            <option>Lack of Provision Supply</option>
                                            <option>Non-Availablity of Cook</option>
                                            <option>Festivals/Programs</option>
                                        </select>
                                    </div>
                                    <div class="col-sm-6"></div>
                                    <div class="col-sm-6">
                                        <label class="form-label">From Date</label>
                                        <input type="date" class="form-control">
                                    </div>
                                    <div class="col-sm-6">
                                        <label class="form-label">To Date</label>
                                        <input type="date" class="form-control">
                                    </div>
                                    <div class="col-sm-12">
                                        <label class="form-label">Change Menu Details</label>
                                        <br />
                                        <div class="form-check form-check-inline">
                                            <input class="form-check-input" type="radio" name="inlineRadioOptions" id="inlineRadio1" value="option1">
                                            <label class="form-check-label" for="inlineRadio1">Breakfast</label>
                                        </div>
                                        <div class="form-check form-check-inline">
                                            <input class="form-check-input" type="radio" name="inlineRadioOptions" id="inlineRadio2" value="option2">
                                            <label class="form-check-label" for="inlineRadio2">Lunch</label>
                                        </div>
                                        <div class="form-check form-check-inline">
                                            <input class="form-check-input" type="radio" name="inlineRadioOptions" id="inlineRadio2" value="option2">
                                            <label class="form-check-label" for="inlineRadio2">Dinner</label>
                                        </div>
                                        <div class="form-check form-check-inline">
                                            <input class="form-check-input" type="radio" name="inlineRadioOptions" id="inlineRadio2" value="option2">
                                            <label class="form-check-label" for="inlineRadio2">Snacks</label>
                                        </div>
                                    </div>
                                    <div class="col-sm-6">
                                        <label class="form-label">Reason In Words</label>
                                        <textarea rows="2" class="form-control"></textarea>
                                    </div>
                                    <div class="col-sm-6">
                                        <label class="form-label">Attach Document</label>
                                        <input type="file" class="form-control">
                                    </div>
                                </div>
                            </div>
                            <div class="modal-footer">
                                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                                <button type="button" class="btn btn-primary">Submit</button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="tab-pane fade" id="v-pills-vm" role="tabpanel" aria-labelledby="v-pills-vm-tab">
                <div id="vendorContent">
                    <p>Loading...</p>
                </div>
            </div>
        </div>
    </div>
</div>

<input type="hidden" id="selectedTab" asp-for="SelectedTab" value="@Model.SelectedTab" />
<input type="hidden" id="ActiveTab" name="ActiveTab" />